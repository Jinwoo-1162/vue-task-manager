{"remainingRequest":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/Users/jinwoopark/Desktop/vue-task-manager/src/App.vue?vue&type=template&id=7ba5bd90","dependencies":[{"path":"/Users/jinwoopark/Desktop/vue-task-manager/src/App.vue","mtime":1625171246654},{"path":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/jinwoopark/Desktop/vue-task-manager/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CiAgPEluZm9QYW5lIC8+CiAgPGRpdiBjbGFzcz0iY29udGFpbmVyIj4KICAgIDxIZWFkZXIgOnNob3dBZGRUYXNrPSJzaG93QWRkVGFzayIgQHRvZ2dsZS1hZGQtdGFzaz0idG9nZ2xlQWRkVGFzayIgdGl0bGU9IlRhc2sgVHJhY2tlciIgLz4KICAgIDxkaXYgdi1zaG93PSJzaG93QWRkVGFzayI+CiAgICAgIDxBZGRUYXNrIEBhZGQtdGFzaz0iYWRkVGFzayIgLz4KICAgIDwvZGl2PgogICAgPFRhc2tzIEB0b2dnbGUtcmVtaW5kZXI9InRvZ2dsZVJlbWluZGVyIiBAZGVsZXRlLXRhc2s9ImRlbGV0ZVRhc2siIDp0YXNrcz0idGFza3MiIC8+CiAgPC9kaXY+Cg=="},{"version":3,"sources":["/Users/jinwoopark/Desktop/vue-task-manager/src/App.vue"],"names":[],"mappings":";EACE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACX,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IACpvB,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;IAChC,CAAC,CAAC,CAAC,CAAC,CAAC;IACL,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;EACrF,CAAC,CAAC,CAAC,CAAC,CAAC","file":"/Users/jinwoopark/Desktop/vue-task-manager/src/App.vue","sourceRoot":"","sourcesContent":["<template>\n  <InfoPane />\n  <div class=\"container\">\n    <Header :showAddTask=\"showAddTask\" @toggle-add-task=\"toggleAddTask\" title=\"Task Tracker\" />\n    <div v-show=\"showAddTask\">\n      <AddTask @add-task=\"addTask\" />\n    </div>\n    <Tasks @toggle-reminder=\"toggleReminder\" @delete-task=\"deleteTask\" :tasks=\"tasks\" />\n  </div>\n</template>\n\n<script>\nimport Header from './components/Header.vue';\nimport Tasks from './components/Tasks.vue';\nimport AddTask from './components/AddTask.vue';\nimport InfoPane from './components/InfoPane.vue'\n\nexport default {\n  name: 'App',\n  components: {\n    Header,\n    Tasks,\n    AddTask,\n    InfoPane,\n  },\n  data() {\n    return {\n      tasks: [],\n      showAddTask: false,\n    }\n  },\n  methods: {\n    toggleAddTask() {\n      this.showAddTask = !this.showAddTask;\n    },\n    addTask(task) {\n      this.tasks = [...this.tasks, task];\n      this.showAddTask = false;\n    },\n    deleteTask(id) {\n      if (confirm('Are you sure?')) {\n        this.tasks = this.tasks.filter((task) => {\n          return task.id !== id\n        });\n      }\n    },\n    toggleReminder(id) {\n      this.tasks = this.tasks.map((task) => {\n        if (task.id === id) {\n          return {...task, reminder: !task.reminder}\n        } else {\n          return task;\n        }\n      })\n    }\n  },\n  created() {\n    this.tasks = [\n      {\n        id: 1,\n        text: 'Doctors Appointment',\n        day: 'March 1st at 2:30pm',\n        reminder: true,\n      },\n      {\n        id: 2,\n        text: 'Meeting at School',\n        day: 'March 3rd at 1:30pm',\n        reminder: true,\n      },\n      {\n        id: 3,\n        text: 'Food Shopping',\n        day: 'March 3rd at 11:00am',\n        reminder: false,\n      },\n    ]\n  }\n}\n</script>\n\n<style>\n  @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400&display=swap');\n  html {\n    min-height: 100%;\n  }\n  * {\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n  }\n  body {\n    font-family: 'Poppins', sans-serif;\n    background: linear-gradient(35deg, #CCFFFF, #FFCCCC);\n    height: 100%;\n  }\n  .container {\n    background: white;\n    max-width: 500px;\n    margin: 30px auto;\n    overflow: auto;\n    min-height: 300px;\n    border: 1px solid steelblue;\n    padding: 30px;\n    border-radius: 5px;\n  }\n  .btn {\n    display: inline-block;\n    background: #000;\n    color: #fff;\n    border: none;\n    padding: 10px 20px;\n    margin: 5px;\n    border-radius: 5px;\n    cursor: pointer;\n    text-decoration: none;\n    font-size: 15px;\n    font-family: inherit;\n  }\n  .btn:focus {\n    outline: none;\n  }\n  .btn:active {\n    transform: scale(0.98);\n  }\n  .btn-block {\n    display: block;\n    width: 100%;\n  }\n</style>\n"]}]}